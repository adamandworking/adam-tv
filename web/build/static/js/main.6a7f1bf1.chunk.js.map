{"version":3,"sources":["components/Header.jsx","components/Chatbox.jsx","video/sample-mp4-file.mp4","components/VideoWrapper.jsx","components/MainContent.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Chatbox","socket","useState","userName","setUserName","chatLog","setChatLog","users","setUsers","chatToSend","setChatToSend","useEffect","on","name","message","prevState","newChatLog","length","shift","emit","id","usersList","map","user","ele","onSubmit","event","preventDefault","onChange","e","target","value","type","VideoWrapper","controls","src","srcVideo","MainContent","io","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAYeA,EAVA,WACX,OACI,qBAAKC,UAAU,qDAAf,SACI,qBAAKA,UAAU,8DAAf,0B,gBC2EGC,EA9EC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACEC,mBAAS,SADX,mBACvBC,EADuB,KACbC,EADa,OAEAF,mBAAS,IAFT,mBAEvBG,EAFuB,KAEdC,EAFc,OAGJJ,mBAAS,IAHL,mBAGvBK,EAHuB,KAGhBC,EAHgB,OAIMN,mBAAS,IAJf,mBAIvBO,EAJuB,KAIXC,EAJW,KAK9BC,qBAAU,WACRV,EAAOW,GAAG,WAAW,WACnBX,EAAOW,GAAG,mBAAmB,YAAwB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACpCR,GAAW,SAAAS,GACT,IAAIC,EAAU,sBAAOD,GAAP,CAAkBF,EAAO,KAAOC,IAI9C,OAHIE,EAAWC,OAAS,IACtBD,EAAWE,QAENF,QAIXf,EAAOW,GAAG,oBAAoB,SAACL,GAC7BC,EAASD,MAEXN,EAAOkB,KAAK,uBAAwB,CAAEC,GAAInB,EAAOmB,GAAIjB,SAAUF,EAAOmB,UAEvE,IAEH,IAcIC,EAAYd,EAAMe,KAAI,SAACC,GAAD,OAAU,6BAAgBA,GAAPA,MAE7C,OACE,qBAAKxB,UAAU,qDAAf,SACE,sBAAKA,UAAU,sCAAf,UACE,sBAAKA,UAAU,4CAAf,UACE,qBAAKA,UAAU,kHAAf,sBAGA,sBAAKA,UAAU,qCAAf,mBAC6B,GAApBsB,EAAUJ,OAAc,KAAO,MADxC,IACgDI,EAAUJ,OAD1D,IACuF,GAApBI,EAAUJ,OAAc,SAAW,SADtG,kBAGA,qBAAKlB,UAAU,qFAAf,SAEIM,EAAQiB,KACN,SAACE,GAAD,OAAS,qBAAKzB,UAAU,sBAAf,SAAsCyB,YAKvD,uBAAMC,SA1Ba,SAACC,GACxBzB,EAAOkB,KAAK,kBAAmB,CAAEN,KAAMV,EAAUW,QAASL,IAC1DC,EAAc,IACdgB,EAAMC,kBAuBgC5B,UAAU,+BAA5C,UACE,8BACE,0CAEE,uBACA,uBAAOA,UAAU,qBAAqB6B,SAvCnB,SAACC,GAC9BzB,EAAYyB,EAAEC,OAAOC,eA0Cf,6CAEE,0BAAUhC,UAAU,kCAAkCgC,MAAOtB,EAAYmB,SAzClD,SAACC,GAChCnB,EAAcmB,EAAEC,OAAOC,aA0CjB,wBAAQhC,UAAU,yBAAyBiC,KAAK,SAASD,MAAM,SAA/D,2BCzEK,MAA0B,4CCqB1BE,EAlBM,WAOjB,OACI,qBAAKlC,UAAU,+BAAf,SACI,qBAAKA,UAAU,sDAAf,SACI,uBAAOA,UAAU,WAAWmC,UAAQ,EAApC,SACI,wBAAQC,IAAKC,EAAUJ,KAAK,qBCDjCK,EATK,SAAC,GAAc,IAAbpC,EAAY,EAAZA,OAClB,OACI,sBAAKF,UAAU,oCAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAASE,OAAQA,QCFvBA,EAASqC,IAAG,6BAUHC,MATf,WACE,OACE,sBAAKxC,UAAU,yBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAaE,OAAQA,QCCZuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6a7f1bf1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (\n        <div className=\" h-16 bg-gray-900 flex justify-center items-center\">\n            <div className=\" text-center text-white text-2xl font-mono italic font-bold\">\n                Adam's TV\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React, { useEffect, useRef, useState } from \"react\"\n\nconst Chatbox = ({ socket }) => {\n  const [userName, setUserName] = useState(\"Guest\")\n  const [chatLog, setChatLog] = useState([])\n  const [users, setUsers] = useState([])\n  const [chatToSend, setChatToSend] = useState(\"\")\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      socket.on(\"Chat:NewMessage\", ({ name, message }) => {\n        setChatLog(prevState => {\n          let newChatLog = [...prevState, name + \": \" + message]\n          if (newChatLog.length > 14) {\n            newChatLog.shift()\n          }\n          return newChatLog\n        })\n      })\n\n      socket.on(\"Chat:UsersChange\", (users) => {\n        setUsers(users)\n      })\n      socket.emit(\"Chat:NewUserRegister\", { id: socket.id, userName: socket.id })\n    });\n  }, [])\n\n  const handleUserNameOnChange = (e) => {\n    setUserName(e.target.value)\n  }\n\n  const handleChatToSendOnChange = (e) => {\n    setChatToSend(e.target.value)\n  }\n\n  const handleChatSubmit = (event) => {\n    socket.emit(\"Chat:NewMessage\", { name: userName, message: chatToSend })\n    setChatToSend(\"\")\n    event.preventDefault();\n  }\n\n  let usersList = users.map((user) => <li key={user}>{user}</li>)\n\n  return (\n    <div className=\"h-full w-full lg:w-4/12 bg-gray-800 text-white p-8\">\n      <div className=\"h-full flex flex-col justify-around\">\n        <div className=\"flex flex-col items-center justify-center\">\n          <div className=\"border-8 rounded-full py-3 px-6 flex items-center justify-center text-sm lg:text-2xl font-mono italic font-bold\">\n            Chatroom\n          </div>\n          <div className=\"text-sm lg:text-2xl font-mono pt-4\">\n            There {usersList.length == 1 ? \"is\" : \"are\"} {usersList.length} {usersList.length == 1 ? \"person\" : \"people\"} in the room\n          </div>\n          <div className=\"overscroll-contain rounded-3xl w-11/12 border h-32 lg:h-96 m-8 p-4 overflow-x-auto\" >\n            {\n              chatLog.map(\n                (ele) => <div className=\"whitespace-pre-line\">{ele}</div>\n              )\n            }\n          </div>\n        </div>\n        <form onSubmit={handleChatSubmit} className=\"flex flex-col justify-center\">\n          <div>\n            <label>\n              Name:\n              <br/>\n              <input className=\"bg-gray-800 border\" onChange={handleUserNameOnChange} />\n            </label>\n          </div>\n\n          <label>\n            Message:\n            <textarea className=\" h-36 w-full bg-gray-800 border\" value={chatToSend} onChange={handleChatToSendOnChange}></textarea>\n          </label>\n          <button className=\"border w-14 rounded-xl\" type=\"submit\" value=\"Submit\" >Send</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Chatbox;\n","export default __webpack_public_path__ + \"static/media/sample-mp4-file.1f058b06.mp4\";","import React, { useEffect, useRef, useState } from \"react\"\nimport srcVideo from '../video/sample-mp4-file.mp4'\n\nconst VideoWrapper = () => {\n    // const [isMuted, SetIsMuted] = useState(true)\n\n    // useEffect(() => {\n    //     SetIsMuted(false)\n    //   }, [])\n    \n    return (\n        <div className=\"h-full flex-grow bg-gray-800\">\n            <div className=\"h-full flex justify-center items-center bg-gray-800\">\n                <video className=\" w-full \" controls>\n                    <source src={srcVideo} type=\"video/mp4\" />\n                </video>\n            </div>\n        </div>\n    );\n}\n\nexport default VideoWrapper;\n","import React from 'react';\nimport Chatbox from './Chatbox';\nimport VideoWrapper from './VideoWrapper';\n\nconst MainContent = ({socket}) => {\n    return (\n        <div className=\" h-full flex flex-col lg:flex-row\">\n            <VideoWrapper/>\n            <Chatbox socket={socket}/>\n        </div>\n    );\n}\n\nexport default MainContent;\n","import React, { useEffect, useRef, useState } from \"react\"\nimport io from \"socket.io-client\"\nimport \"./App.css\"\nimport Header from \"./components/Header\"\nimport MainContent from \"./components/MainContent\"\n\nconst socket = io('http://34.210.176.75:4000')\nfunction App() {\n  return (\n    <div className=\"h-screen flex flex-col\">\n      <Header />\n      <MainContent socket={socket} />\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}